{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","React","useState","id","setId","key","className","alt","onSubmit","e","preventDefault","fetch","then","user","console","log","catch","err","type","onChange","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KA0CeA,MAxCf,WAEE,MAAoBC,IAAMC,SAAS,IAAnC,mBAAOC,EAAP,KAAWC,EAAX,KACA,EAAsBH,IAAMC,SAAS,oCAArC,mBAAOG,EAAP,KAqBA,OArBA,KAsBE,sBAAKC,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKA,UAAU,WAAWC,IAAI,SAC9B,uBAAMD,UAAU,OAAOE,SAV7B,SAAsBC,GACpBA,EAAEC,iBAbKC,MAAM,iFAAD,OAAkFN,EAAlF,2CACTO,MAAK,SAACC,GAEL,OADAC,QAAQC,IAAIF,GACLA,KAERG,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,OAiB1B,UACE,uBAAOC,KAAK,OAAOC,SAf3B,SAAsBV,GACpBL,EAAMK,EAAEW,OAAOC,QAckCA,MAAOlB,IAClD,wBAAQG,UAAU,gBAAgBY,KAAK,SAAvC,wBAGJ,sBAAMZ,UAAU,gBCrBPgB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.6748a68b.chunk.js","sourcesContent":["import React from 'react';\n\nfunction App() {\n\n  const [id, setId] = React.useState('');\n  const [key, setKey] = React.useState('3B379C7D4F5B3E019F6D2CE93C2F0DFD');\n\n  function findUser(id: string):any {\n    return fetch(`https://api.steampowered.com/IPlayerService/GetRecentlyPlayedGames/v0001/?key=${key}&steamid=76561198300585294&format=json`)\n      .then((user) => {\n        console.log(user);\n        return user\n      })\n      .catch((err) => console.log(err))\n  }\n\n  function handleChange(e: any) {\n    setId(e.target.value);\n  }\n\n  function handleSubmit(e: any) {\n    e.preventDefault();\n    \n    findUser(id);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img className=\"App-logo\" alt=\"logo\" />\n        <form className=\"form\" onSubmit={handleSubmit}>\n          <input type=\"text\" onChange={handleChange} value={id} />\n          <button className=\"submit-button\" type=\"submit\">Find</button>\n        </form>\n      </header>\n      <main className=\"content\">\n\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}